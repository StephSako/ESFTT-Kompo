{% if erreur %}
    <p class="pastille red white-text">{{ erreur }}</p>
{% else %}
    <div class="virtualRankSwitches">
        <div class="switch virtualClassement">
            <label>
                <span id="mode_mensuel">Mensuel</span>
                <input type="checkbox" id="input_mode_plage">
                <span class="lever"></span>
                <span id="mode_phase">Phase</span>
            </label>
        </div>

        <div class="switch virtualClassement">
            <label>
                <span id="mode_progression">Progression</span>
                <input type="checkbox" id="input_mode_type">
                <span class="lever"></span>
                <span id="mode_points">Points</span>
            </label>
        </div>
    </div>

    <table class="striped rankingVirtualPoints">
        <tbody id="mode_progression_mensuel">
            {{ _self.classement(classementProgressionMensuel, 'pointsVirtuelsPointsWonMensuel') }}
        </tbody>

        <tbody id="mode_progression_phase" hidden="hidden">
            {{ _self.classement(classementProgressionPhase, 'pointsVirtuelsPointsWonPhase') }}
        </tbody>

        <tbody id="mode_points_mensuel" hidden="hidden">
            {{ _self.classement(classementPointsMensuel, 'pointsVirtuelsPointsWonMensuel') }}
        </tbody>

        <tbody id="mode_points_phase" hidden="hidden">
            {{ _self.classement(classementPointsPhase, 'pointsVirtuelsPointsWonPhase') }}
        </tbody>
    </table>

    <script type="text/javascript">
        $(document).ready(function () {
            let input_mode_plage = $('input#input_mode_plage');
            let input_mode_type = $('input#input_mode_type');
            let span_mode_mensuel = $('span#mode_mensuel');
            let span_mode_phase = $('span#mode_phase');
            let span_mode_progression = $('span#mode_progression');
            let span_mode_points = $('span#mode_points');
            let tbody_mode_progression_mensuel = $('tbody#mode_progression_mensuel');
            let tbody_mode_progression_phase = $('tbody#mode_progression_phase');
            let tbody_mode_points_mensuel = $('tbody#mode_points_mensuel');
            let tbody_mode_points_phase = $('tbody#mode_points_phase');

            span_mode_mensuel.css('color', 'black').css('font-weight', 'bold');
            span_mode_phase.css('color', 'grey');
            span_mode_progression.css('color', 'black').css('font-weight', 'bold');
            span_mode_points.css('color', 'grey');

            /** Click sur le switch de la plage de classement (mensuel | phase) */
            input_mode_plage.change(function () {
                /** Si le switch du type est désactivé, on cache les classements par points */
                if (!input_mode_type.is(":checked")) {
                    tbody_mode_points_mensuel.attr('hidden', '');
                    tbody_mode_points_phase.attr('hidden', '');
                    if (this.checked) { /** On affiche le classement de phase par progression */
                        span_mode_mensuel.css('color', 'grey').css('font-weight', 'normal');
                        span_mode_phase.css('color', 'black').css('font-weight', 'bold');
                        tbody_mode_progression_phase.removeAttr('hidden');
                        tbody_mode_progression_mensuel.attr('hidden', '');
                    } else { /** On affiche le classement mensuel par progression */
                        span_mode_mensuel.css('color', 'black').css('font-weight', 'bold');
                        span_mode_phase.css('color', 'grey').css('font-weight', 'normal');
                        tbody_mode_progression_phase.attr('hidden', '');
                        tbody_mode_progression_mensuel.removeAttr('hidden');
                    }
                } else { /** Sinon, on cache les classements par progression */
                    tbody_mode_progression_mensuel.attr('hidden', '');
                    tbody_mode_progression_phase.attr('hidden', '');
                    if (this.checked) { /** On affiche le classement de phase par points */
                        span_mode_mensuel.css('color', 'grey').css('font-weight', 'normal');
                        span_mode_phase.css('color', 'black').css('font-weight', 'bold');
                        tbody_mode_points_phase.removeAttr('hidden');
                        tbody_mode_points_mensuel.attr('hidden', '');
                    } else { /** On affiche le classement mensuel par points */
                        span_mode_mensuel.css('color', 'black').css('font-weight', 'bold');
                        span_mode_phase.css('color', 'grey').css('font-weight', 'normal');
                        tbody_mode_points_phase.attr('hidden', '');
                        tbody_mode_points_mensuel.removeAttr('hidden');
                    }
                }
            });

            /** Click sur le switch du type de classement (progression | points) */
            input_mode_type.change(function () {
                /** Si le switch de la plage est désactivé, on cache les classements de phase */
                if (!input_mode_plage.is(":checked")) {
                    tbody_mode_progression_phase.attr('hidden', '');
                    tbody_mode_points_phase.attr('hidden', '');
                    if (this.checked) { /** On affiche le classement mensuel par points */
                        span_mode_progression.css('color', 'grey').css('font-weight', 'normal');
                        span_mode_points.css('color', 'black').css('font-weight', 'bold');
                        tbody_mode_points_mensuel.removeAttr('hidden');
                        tbody_mode_progression_mensuel.attr('hidden', '');
                    } else { /** On affiche le classement mensuel par progression */
                        span_mode_progression.css('color', 'black').css('font-weight', 'bold');
                        span_mode_points.css('color', 'grey').css('font-weight', 'normal');
                        tbody_mode_progression_mensuel.removeAttr('hidden');
                        tbody_mode_points_mensuel.attr('hidden', '');
                    }
                } else { /** Sinon, on cache les classements mensuels */
                    tbody_mode_progression_mensuel.attr('hidden', '');
                    tbody_mode_points_mensuel.attr('hidden', '');
                    if (this.checked) { /** On affiche le classement de phase par points */
                        span_mode_progression.css('color', 'grey').css('font-weight', 'normal');
                        span_mode_points.css('color', 'black').css('font-weight', 'bold');
                        tbody_mode_points_phase.removeAttr('hidden');
                        tbody_mode_progression_phase.attr('hidden', '');
                    } else { /** On affiche le classement de phase par progression */
                        span_mode_progression.css('color', 'black').css('font-weight', 'bold');
                        span_mode_points.css('color', 'grey').css('font-weight', 'normal');
                        tbody_mode_points_phase.attr('hidden', '');
                        tbody_mode_progression_phase.removeAttr('hidden');
                    }
                }
            });
        });
    </script>
{% endif %}

{% macro classement(classementVirtuel, pointsWonField) %}
    {% for joueur in classementVirtuel %}
        <tr>
            <td>
                <div class="chip">
                    <img src="{{ asset(joueur["avatar"]) }}" alt="Avatar">
                    {% if loop.index <4 %}
                        <i class="material-icons {% if loop.index == 1 %}gold-color{% elseif loop.index == 2 %}silver-color{% elseif loop.index == 3 %}bronze-color{% endif %}">military_tech</i>
                    {% endif %}
                    <span class="nom{% if joueur["nom"] == app.user.nom ~ ' ' ~ app.user.prenom %} bold{% endif %}">{{ joueur["nom"] }}</span>
                </div>
            </td>
            {% if joueur["pointsVirtuelsVirtualPoints"] %}
                <td class="points-td">
                    <span class="pastille reset virtualPoints">{{ joueur["pointsVirtuelsVirtualPoints"] | round(1, 'floor') }} pts</span>
                </td>
                <td class="progression-td">
                    <span class="{% if joueur[pointsWonField] > 0 %}green{% elseif joueur[pointsWonField] == 0 %}grey{% else %}red{% endif %}-text"><i class="material-icons">{% if joueur[pointsWonField] >= 0 %}keyboard_arrow_up{% else %}keyboard_arrow_down{% endif %}</i>{{ joueur[pointsWonField] | round(1, 'floor') }}</span>
                </td>
            {% else %}
                <td colspan="2" class="center">
                    <span class="red-text text-lighten-1">Matches introuvables</span>
                </td>
            {% endif %}
        </tr>
    {% endfor %}
{% endmacro %}